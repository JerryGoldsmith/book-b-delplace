realtime :
--------

{
  "rules": {
    ".read": "auth.uid != null",
    ".write": "auth.uid !== null",
      
      "some_path": {
      	"$uid": {
        	".read": "auth != null && auth.uid == $uid",
        	".write": "auth != null && auth.uid == $uid"
      	}
    	},
      
      "users": {
      	"$userId": {
        ".write": "$userId != auth.uid"
      	}
    	},

      "books": {
        ".read" : true,
        ".write": true
      },
        
      "imageDetails": {
        ".read" : true,
        ".write": true
      },

      "matrixs": {
        ".read" : true,
        ".write": false
      },

      "totalA": {
      	".read" : false,
        ".write": false
      },

      "totalB": {
      	".read" : false,
        ".write": false
      },

      "totalC": {
      	".read" : false,
        ".write": false
      },

      "totalD": {
      	".read" : false,
        ".write": false
      },

      "totalE": {
      	".read" : false,
        ".write": false
      },

      "totalF": {
      	".read" : false,
        ".write": false
      },

      "totalG": {
      	".read" : false,
        ".write": false
      },

      "totalH": {
      	".read" : false,
        ".write": false
      },

      "totalI": {
      	".read" : false,
        ".write": false
      },

      "totalJ": {
      	".read" : false,
        ".write": false
      },

      "totalK": {
      	".read" : false,
        ".write": false
      },

      "totalL": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteA": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteB": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteC": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteD": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteE": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteF": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteG": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteH": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteI": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteJ": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteK": {
      	".read" : false,
        ".write": false
      },

      "totalCompleteL": {
      	".read" : false,
        ".write": false
      },

      "totalTvaA": {
      	".read" : false,
        ".write": false
      },

      "totalTvaB": {
      	".read" : false,
        ".write": false
      },

      "totalTvaC": {
      	".read" : false,
        ".write": false
      },

      "totalTvaD": {
      	".read" : false,
        ".write": false
      },

      "totalTvaE": {
      	".read" : false,
        ".write": false
      },

      "totalTvaF": {
      	".read" : false,
        ".write": false
      },

      "totalTvaG": {
      	".read" : false,
        ".write": false
      },

      "totalTvaH": {
      	".read" : false,
        ".write": false
      },

      "totalTvaI": {
      	".read" : false,
        ".write": false
      },

      "totalTvaJ": {
      	".read" : false,
        ".write": false
      },

      "totalTvaK": {
      	".read" : false,
        ".write": false
      },

      "totalTvaL": {
      	".read" : false,
        ".write": false
      }
  }
}



Firestore :
---------

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database

    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    match /seatOneOrders/{seatOneOrder} {
      allow read: if false;
      allow write: if false;
    }

    match /coffeeOrders/{coffeeOrder} {
      allow read: if false;
      allow write: if false;
    }
  }
}

Storage :
-------

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write;
    }
  }
}